#mongo db connection
spring.data.mongodb.crypto-currency.uri=mongodb://cmc:cmc@127.0.0.1:27017/cryptoCurrency?retryWrites=true&w=majority&minPoolSize=2&maxPoolSize=3&readPreference=secondary
spring.data.mongodb.crypto-currency.database=cryptoCurrency
#kafka config
cmc.crypto.currency.scheduler.kafka.bootstrap-servers=localhost:9092
### common kafka producer
cmc.crypto.currency.scheduler.kafka.request-timeout=60000
cmc.crypto.currency.scheduler.kafka.acks=all
### common kafka consumer
cmc.crypto.currency.scheduler.kafka.session-timeout=300000
cmc.crypto.currency.scheduler.kafka.heartbeat-interval=3000
cmc.crypto.currency.scheduler.kafka.max-records=32
cmc.crypto.currency.scheduler.kafka.enable-auto-commit=false
cmc.crypto.currency.scheduler.kafka.max-poll-interval=120000
### kafka producer topic
cmc.crypto.currency.scheduler.kafka.producer.test.topic=test
cmc.crypto.currency.scheduler.kafka.producer.test.clientId=crypto_currency_scheduler_test_producer
cmc.crypto.currency.scheduler.kafka.producer.spot.topic=crypto_currency_scheduler_spot_dev
cmc.crypto.currency.scheduler.kafka.producer.spot.clientId=crypto_currency_scheduler_spot_producer
### kafka consumer topic
cmc.crypto.currency.scheduler.kafka.consumer.test.topic=test
cmc.crypto.currency.scheduler.kafka.consumer.test.clientId=crypto_currency_scheduler_test_consumer
cmc.crypto.currency.scheduler.kafka.consumer.test.groupId=crypto_currency_scheduler_test_consumer_group

